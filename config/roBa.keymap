#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt        Sym_Num {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR    &kp PERCENT                       &kp AMPERSAND  &kp SINGLE_QUOTE  &kp EQUAL      &kp CARET       &kp BACKSLASH
&kp NUMBER_1     &kp NUMBER_2       &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans      &trans  &kp PLUS       &kp TILDE         &kp PIPE       &kp AT_SIGN     &kp COLON
&kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans      &trans  &none          &kp ASTERISK      &kp GRAVE      &kp UNDERSCORE  &kp SEMICOLON
&trans           &trans             &trans        &trans        &trans        &trans      &trans  &trans                                                           &trans
            >;
        };s/zmk/pointing.h>

// 英語キーボード設定用（標準的なZMK設定）

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        TO_Layer4 {
            bindings = <&to 4>;
            key-positions = <37 38>;
        };

        TO_Layer5 {
            bindings = <&to 5>;
            key-positions = <39 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W      &kp E         &kp R  &kp T                         &kp Y      &kp U  &kp I      &kp O      &kp P
&kp A       &kp S      &kp D         &kp F  &kp G  &trans      &trans     &kp H      &kp J  &kp K      &kp L      &kp DELETE
&kp Z       &kp X      &kp C         &kp V  &kp B  &trans      &trans     &kp N      &kp M  &mkp LCLK  &mkp RCLK  &mkp MB3
&kp LSHIFT  &kp LCTRL  &kp LEFT_ALT  &to 1  &to 2  &to 3       &kp SPACE  &kp ENTER                               &kp GRAVE
            >;
        };

        Layer1 {
            bindings = <
&kp ESC       &kp APOSTROPHE  &kp DOUBLE_QUOTES     &kt HASH      &kp AMPERSAND                           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSPACE
&kp TAB       &kp LC(S)       &kp NON_US_BACKSLASH  &kp QUESTION  &kp EXCLAMATION  &trans      &trans     &kp PLUS              &kp MINUS              &kp ASTERISK      &kp SLASH          &kp DELETE
&kp LC(Z)     &kp LC(X)       &kp LC(C)             &kp LC(V)     &kp LC(Y)        &trans      &trans     &kp COMMA             &kp PERIOD             &kp AT_SIGN       &kp EQUAL          &trans
&kp CAPSLOCK  &kp LCTRL       &kp LEFT_ALT          &to 1         &to 2            &to 3       &kp SPACE  &kp ENTER                                                                         &out OUT_BLE
            >;
        };

        Layer2 {
            bindings = <
&kp ESC  &trans        &trans     &kp UP_ARROW    &trans                                  &kp PLUS      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK
&kp TAB  &trans        &kp LEFT   &trans          &kp RIGHT_ARROW  &trans      &trans     &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH
&trans   &trans        &trans     &kp DOWN_ARROW  &trans           &trans      &trans     &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&trans                   &kp LEFT_WIN    &trans     &to 1           &to 2            &to 3       &kp SPACE  &kp RET                                                 &kp PIPE
            >;
        };

        Layer3 {
            bindings = <
&kp F1    &kp F2        &kp F3      &kp F4      &kp F5                              &kp F6         &kp F7         &kp F8         &kp F9         &kp F10
&kp HOME  &bt BT_CLR    &bt BT_NXT  &bt BT_PRV  &bt BT_CLR_ALL  &trans      &trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
&trans    &trans        &trans      &trans      &trans          &trans      &trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
&trans    &kp LEFT_WIN  &trans      &trans      &trans          &trans      &trans  &trans                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&mkp LCLK  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans     &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        Sym_Num {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR    &kp PERCENT                       &kp AMPERSAND  &kp SINGLE_QUOTE  &kp EQUAL      &kp CARET       &kp BACKSLASH
&kp NUMBER_1     &kp NUMBER_2       &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans      &trans  &kp PLUS       &kp TILDE         &kp PIPE       &kp AT_SIGN     &kp COLON
&kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans      &trans  &none          &kp ASTERISK      &kp GRAVE      &kp UNDERSCORE  &kp SEMICOLON
&trans           &trans             &trans        &trans        &trans        &trans      &trans  &trans                                                           &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
